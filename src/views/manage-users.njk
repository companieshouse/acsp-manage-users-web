{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "govuk/components/table/macro.njk" import govukTable %}
{% from "govuk/components/tabs/macro.njk" import govukTabs %}
{% from "govuk/components/error-message/macro.njk" import govukErrorMessage %}
{% from "govuk/components/pagination/macro.njk" import govukPagination %}
{% from "govuk/components/back-link/macro.njk" import govukBackLink %}

{% extends "layouts/default.njk" %}

{% block back_link %}
        {{ govukBackLink({
            text: lang.back_link_to_authorised_agent_services,
            href: backLinkUrl,
            attributes: {
                id: "back-link-to-previous-page"
            }
        })
    }}
{% endblock %}

{% block main_content %}
    <span class="govuk-caption-l">{{companyName}}</span>

    {% if loggedInUserRole === UserRole.STANDARD %}
        <h1 class="govuk-heading-l">{{ lang.page_header_standard }}</h1>
    {% else %}
        <h1 class="govuk-heading-l">{{ lang.page_header }}</h1>

        {{ govukButton({
            text: lang.add_a_user,
            href: addUserUrl,
            attributes: {
                id: "add-a-user-button",
                "data-event-id": "add-a-user"
            }
        }) }}

        <hr class="govuk-section-break govuk-section-break--m govuk-section-break--visible">
    {% endif %}
    {% set message = null %}

    {% for key, value in errors %}
        {% if key == "search" %}
            {% set message = lang[value.text] %}
        {% endif %}
    {% endfor %}

    {% set formClasses = "govuk-form-group govuk-form-group--error" if message else "govuk-form-group" %}
    {% set inputClasses = "govuk-input govuk-input--error govuk-input--width-10 govuk-!-margin-right-1" if message else "govuk-input govuk-input--width-10 govuk-!-margin-right-1" %}

    <form method="post">
        {% include "partials/csrf_token.njk" %}

        <div class="{{formClasses}}">
            <label class="govuk-label govuk-label--m" for="search">
                {{lang.search_for_a_user}}
            </label>
            <div id="event-name-hint" class="govuk-hint">
                {{lang.enter_the_users_full_email_address}}
            </div>
            {% if message %}
                {{ govukErrorMessage({
                            text: message
                        })
                    }}
            {% endif %}
            <div id="search-input-group">
                <input class="{{inputClasses}}" id="search" name="search" type="text" aria-describedby="event-name-hint" value="{{search}}">
                <button type="submit" class="govuk-button govuk-button--secondary" role="button" data-module="govuk-button" aria-label="{{lang.search}}">{{lang.search}}
                </button>
                <a class="govuk-link govuk-link--no-visited-state govuk-!-font-size-19  govuk-!-margin-left-2" href="{{cancelSearchHref}}" id="acsp-manage-users-cancel-search-link">{{lang.cancel_search}}</a>
            </div>
        </div>
    </form>

    {% set changeUsersRoleHiddenHeader %}
    <span class="govuk-visually-hidden">{{lang.change_users_role}}</span>
    {% endset%}

    {% set removeUserHiddenHeader %}
    <span class="govuk-visually-hidden">{{lang.remove_user}}</span>
    {% endset%}

    {% set allHeaders = [
        {
            text: lang.email_address
        }, {
            text: lang.name
        }, {
            html: changeUsersRoleHiddenHeader
        }, {
            html: removeUserHiddenHeader
        }
    ] %}

    {% set basicHeaders = [
        {
            text: lang.email_address
        }, {
            text: lang.name
        }
    ] %}

    {% set accountOwnersTableHeaders = allHeaders if loggedInUserRole === UserRole.OWNER else 
        basicHeaders %}

    {% set otherTableHeaders = basicHeaders if loggedInUserRole === UserRole.STANDARD else 
        allHeaders %}

    {% set accountOwnersTabContent %}
    <h2 class="govuk-heading-l">{{lang.account_owners}}</h2>
    {% if accountOwnersTableData and accountOwnersTableData.length > 0 %}
        {{ govukTable({
                caption: lang.account_owners,
                captionClasses: "govuk-table__caption--m govuk-visually-hidden",
                firstCellIsHeader: true,
                head: accountOwnersTableHeaders,
                rows: accountOwnersTableData
            })
        }}

        {% if accoutOwnerPadinationData and accoutOwnerPadinationData.items | length %}
            {{ govukPagination(accoutOwnerPadinationData) }}
        {% endif %}
    {% else %}
        <p class="govuk-body">{{lang.you_have_no_account_owners_users}}</p>
    {% endif %}
    {% endset %}

    {% set administratorsTabContent %}
    <h2 class="govuk-heading-l">{{lang.administrators}}</h2>
    {% if administratorsTableData and administratorsTableData.length > 0 %}
        {{ govukTable({
                caption: lang.administrators,
                captionClasses: "govuk-table__caption--m govuk-visually-hidden",
                firstCellIsHeader: true,
                head: otherTableHeaders,
                rows: administratorsTableData
            })
        }}

        {% if adminPadinationData and adminPadinationData.items | length %}
            {{ govukPagination(adminPadinationData) }}
        {% endif %}
    {% else %}
        <p class="govuk-body">{{lang.you_have_no_admin_users}}</p>
    {% endif %}
    {% endset %}

    {% set standardUsersTabContent %}
    <h2 class="govuk-heading-l">{{lang.standard_users}}</h2>
    {% if standardUsersTableData and standardUsersTableData.length > 0 %}
        {{ govukTable({
                caption: lang.standard_users,
                captionClasses: "govuk-table__caption--m govuk-visually-hidden",
                firstCellIsHeader: true,
                head: otherTableHeaders,
                rows: standardUsersTableData
            })
        }}

        {% if standardUserPadinationData and standardUserPadinationData.items | length %}
            {{ govukPagination(standardUserPadinationData) }}
        {% endif %}
    {% else %}
        <p class="govuk-body">{{lang.you_have_no_standard_users}}</p>
    {% endif %}
    {% endset %}

    {{ govukTabs({
            classes: "govuk-!-padding-top-6",
            items: [
                {
                    label: lang.account_owners,
                    id: accountOwnersTabId,
                    panel: {
                        html: accountOwnersTabContent
                    },
                    attributes: {
                        "data-event-id": "account-owner-tab"
                    }
                },
                {
                    label: lang.administrators,
                    id: administratorsTabId,
                    panel: {
                        html: administratorsTabContent
                    },
                      attributes: {
                        "data-event-id": "admin-user-tab"
                    }
                },
                {
                    label: lang.standard_users,
                    id: standardUsersTabId,
                    panel: {
                        html: standardUsersTabContent
                    },
                     attributes: {
                        "data-event-id": "standard-user-tab"
                    }
                }
            ]
        })
    }}

    <script nonce={{ nonce | dump | safe }}>
        function trackGoal(elementId, goalId) {
            document
                .getElementById(elementId)
                .addEventListener("click", () => {
                    _paq.push(["trackGoal", goalId]);
                });
        }

        function trackRemoveButtons(goalId) {
            const removeBtns = document.querySelectorAll(`[data-event-id="remove"]`);

            removeBtns.forEach(function (elem) {
                elem.addEventListener("click", () => {
                    _paq.push(["trackGoal", goalId]);
                });
            });
        }

        function addGoalEventListeners() {
            trackGoal("add-a-user-button", {{MATOMO_ADD_USER_GOAL_ID}});
            trackRemoveButtons({{MATOMO_REMOVE_USER_GOAL_ID}});
        }

        if (document.readyState === "loading") {
            document.addEventListener("DOMContentLoaded", function (e) {
                addGoalEventListeners()
            });
        } else {
            addGoalEventListeners()
        }
    </script>

{% endblock %}